name: Check for QA Merge

on:
  pull_request:
    branches: 
      - master
      - main

jobs:
  check-qa:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      
      - name: Get Branch SHA
        id: get-branch-sha
        run: |
          echo "Branch HEAD SHA: ${{ github.event.pull_request.head.sha }}"
          echo "::set-output name=sha::${{ github.event.pull_request.head.sha }}"

      - uses: actions/checkout@v3
        with:
          ref: QA
          fetch-depth: 0

      - name: Get Last Common SHA
        id: last-common-sha
        run: |
            common=$(echo "$(git merge-base ${{ steps.get-branch-sha.outputs.sha }} QA)")
            echo "Last common SHA: $common"
            echo "::set-output name=sha::$common"
      
      - name: Compare SHAs
        id: compare-shas
        run: |
          echo "Last Common SHA with QA: ${{ steps.last-common-sha.outputs.sha }}"
          if [ "${{ steps.last-common-sha.outputs.sha }}" != "${{ steps.get-branch-sha.outputs.sha }}" ]
          then
            echo "::set-output name=pr-message::Did you merge to QA first? HEAD SHA ${{ steps.get-branch-sha.outputs.sha }} does not match last common  QA SHA ${{ steps.last-common-sha.outputs.sha }}."
            echo "::set-output name=passed::0"
          else
            echo "::set-output name=pr-message::Looks like you merged to QA already! HEAD SHA ${{ steps.get-branch-sha.outputs.sha }} matches last common QA SHA ${{ steps.last-common-sha.outputs.sha }}."
            echo "::set-output name=passed::1"
          fi
          
      - name: Comment on PR
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ${{ steps.compare-shas.outputs.pr-message }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: true 
          
      - name: Pass/Fail
        run: |
        
      - name: Pass/Fail
        if: ${{ steps.compare-shas.outputs.passed }} != 1
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('SHAs do not match')
